<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
                verticalAlign="middle"
                horizontalAlign="center"
                minWidth="600"
                minHeight="600"
                width="100%"
                height="100%"
                verticalGap="1"
                backgroundSize="100%"
                backgroundColor="#ffffff"
                xmlns:flexlib="http://code.google.com/p/flexlib/"
                initialize="loadStyles()">
    <mx:Style source="/assets/styles_1024_768.css"/>
    <mx:Script>
        <![CDATA[
            import mx.events.PropertyChangeEvent;
            import mx.utils.ObjectProxy;
            import mx.containers.Canvas;
            import mx.controls.Alert;
            import mx.controls.ComboBox;
            import mx.events.FlexEvent;
            import mx.events.IndexChangedEvent;
            import mx.events.ItemClickEvent;
            import mx.rpc.events.FaultEvent;
            import mx.rpc.events.ResultEvent;
            import mx.rpc.http.HTTPService;
            import mx.collections.ArrayCollection;
            import mx.core.UIComponent;
            import mx.managers.CursorManager;
            import flexlib.events.SuperTabEvent;
            import com.esria.samples.dashboard.view.MemoryBusContent;
            import com.esria.samples.dashboard.view.NewService;
            import com.esria.samples.dashboard.view.DeployedWindow;
            import com.esria.samples.dashboard.view.SetupContent;
            import com.yspay.util.FunctionDelegate;
            import com.esria.samples.dashboard.events.*;
            import com.esria.samples.dashboard.managers.PodLayoutManager;
            import com.esria.samples.dashboard.view.Pod;
            import com.esria.samples.dashboard.view.PodContentBase;
            import com.yspay.pool.*;
            import com.yspay.YsPodLayoutManager;
            import com.yspay.events.EventNewPod;
            import com.yspay.util.EncryptUtil;
            import com.yspay.util.UtilFunc;
            import com.yspay.UserBus;
            import com.yspay.event_handlers.EventHandlerFactory;
            import com.yspay.*;
            import com.yspay.YsData.MData;
            import mx.styles.StyleManager;
            import com.yspay.YsData.PData;
            import nl.demonsters.debugger.MonsterDebugger;

            // Array of PodLayoutManagers
            protected var podManager:YsPodLayoutManager;
            private var podLayoutManagers:Array = new Array();
            public var _pool:Pool = new Pool;
            public var M_data:MData = new MData; //xingj

            protected var info_init_arr:Array = ['DICT', 'WINDOWS', 'BUTTON', 'SERVICES',
                                                 'TRAN', 'ACTION', 'HBOX', 'EVENT',
                                                 'DATAGRID'];
            //public var monsterDebugger:MonsterDebugger = new MonsterDebugger(this);

            protected var pod_xml:XML = new XML('<?xml version="1.0" encoding="utf-8"?> \
<views>\
    <view id="view0">\
    </view>\
    <view id="view1">\
    </view>\
</views>');

            private function loadStyles():void
            {
//                var styleURL:String = "assets/styles_1024_768.swf";
//                var arr:Array = UtilFunc.getRatio();
//                if (arr[0] == 1280 && arr[1] == 1024)
//                {
//                    styleURL = "assets/styles_1280_1024.swf";
//                }
//                else if (arr[0] == 1024 && arr[1] == 768)
//                {
//                    styleURL = "assets/styles_1024_768.swf";
//                }
//                else if (arr[0] == 1440 && arr[1] == 900)
//                {
//                    styleURL = "assets/styles_1440_900.swf";
//                }
//                else if (arr[0] == 1600 && arr[1] == 1200)
//                {
//                    styleURL = "assets/styles_1600_1200.swf";
//                }
//                if (styleURL != null)
//                    StyleManager.loadStyleDeclarations(styleURL);

            }

            private function onEnterState():void
            {
                // Load pods.xml, which contains the pod layout.
                /*var httpService:HTTPService = new HTTPService();
                   httpService.url = "data/pods.xml";
                   httpService.resultFormat = "e4x";
                   httpService.addEventListener(FaultEvent.FAULT, onFaultHttpService);
                   httpService.addEventListener(ResultEvent.RESULT, onResultHttpService);
                 httpService.send();*/
                initPoolAndM_data();
                onResultHttpService();
            }

            protected function ServiceRtnChange(event:PropertyChangeEvent):void
            {
                trace(event.property);
                trace(event.source[event.property]);
                if (event.property == 'SCALL_RTN')
                    SCALL_RTN.text = event.source.SCALL_RTN;
                else if (event.property == 'USER_RTN')
                    USER_RTN.text = event.source.USER_RTN;
                else if (event.property == 'USER_RTN_MSG')
                    USER_RTN_MSG.text = event.source.USER_RTN_MSG;
                if ((0 != parseInt(SCALL_RTN.text)) || (0 != parseInt(USER_RTN.text)))
                {
                    SCALL_RTN.setStyle('color', 'red');
                    USER_RTN.setStyle('color', 'red');
                    USER_RTN_MSG.setStyle('color', 'red');
                }
                else
                {
                    SCALL_RTN.setStyle('color', 'blue');
                    USER_RTN.setStyle('color', 'blue');
                    USER_RTN_MSG.setStyle('color', 'blue');
                }
            }

            public function initPoolAndM_data():void
            {
                var ip:String = ipChoose.selectedItem.ip;
                var port:String = ipChoose.selectedItem.port;
                var info_table_name:String = 'info';
                var info_select_name:String = 'YSDBSTB_DTSINFOSelect';
                var info_select_arg:String = 'YSDICT_DB_TB_DTSINFO';
                var dts_table_name:String = 'dts';
                var dts_select_name:String = 'YSDBSDTSObjectSelect';
                var dts_select_arg:String = '__DICT_XML';
                var dts_insert_name:String = 'YSDBSDTSObjectConfigInsert';
                var dts_insert_arg:String = '__DICT_XML';

                // 服务返回信息
                _pool.SERVICE_RTN = new ObjectProxy;
                _pool.SERVICE_RTN.addEventListener(PropertyChangeEvent.PROPERTY_CHANGE,
                                                   ServiceRtnChange);

                _pool.Add(info_table_name, DBTable,
                          info_select_name, info_select_arg,
                          '', '',
                          ip, port);
                _pool.Add(dts_table_name, DBTable,
                          dts_select_name, dts_select_arg,
                          dts_insert_name, dts_insert_arg,
                          ip, port);
                var info:DBTable = _pool.info as DBTable;

                this.addEventListener(info.select_event_name, InfoQueryComplete);
                this.enabled = false;
                CursorManager.setBusyCursor();

                InitInfoItem();
                _pool.Add('MAIN_BUS', UserBus);
            }

            protected function InitInfoItem():void
            {
                var info:DBTable = _pool.info as DBTable;
                var ver_sel_item:Object = versionChoose.selectedItem;
                if (info_init_arr.length == 0)
                {
                    this.enabled = true;
                    CursorManager.removeBusyCursor();
                    return;
                }

                var info_query:String = info_init_arr.pop();
                var info_query_cond:String = "type='" + info_query + "' and appname='MapServer'";
                if (ver_sel_item.hasOwnProperty('isused'))
                    info_query_cond += " and ISUSED='" + ver_sel_item.isused + "'";
                info.AddQuery(info_query, QueryWithIndex, info_query_cond, this);
                info.DoQuery(info_query, false, 'NAME', 'VER');
                M_data.POOL.INFO[info_query] = new ArrayCollection;
            }

            //event.query_name "dict window tran event hbox ........"
            //M_data.POOL.INFO.DICT is ArrayCollection 里面存储每个dict
            private function InfoQueryComplete(event:DBTableQueryEvent):void
            {
                trace('main0.mxml', event.query_name);
                if (M_data.POOL.INFO[event.query_name] != null)
                    M_data.POOL.INFO[event.query_name].removeAll();

                M_data.POOL.INFO[event.query_name] = new ArrayCollection;
                var info:DBTable = _pool.info as DBTable;
                for each (var dict_obj:QueryObject in info[event.query_name])
                {
                    var ys_var:YsVarStruct = dict_obj.Get();
                    var o:Object = new Object;
                    o["APPNAME"] = ys_var.APPNAME.getValue();
                    o["CDATE"] = ys_var.CDATE.getValue();
                    o["CUSER"] = ys_var.CUSER.getValue();
                    o["DTS"] = ys_var.DTS.getValue();
                    o["ISUSED"] = ys_var.ISUSED.getValue();
                    o["MDATE"] = ys_var.MDATE.getValue();
                    o["MEMO"] = ys_var.MEMO.getValue();
                    o["MUSER"] = ys_var.MUSER.getValue();
                    o["NAME"] = ys_var.NAME.getValue();
                    o["TYPE"] = ys_var.TYPE.getValue();
                    o["VALUE"] = ys_var.VALUE.getValue();
                    o["VER"] = ys_var.VER.getValue();
                    M_data.POOL.INFO[event.query_name].addItem(o);

                }

                InitInfoItem();
            }

            private function onFaultHttpService(e:FaultEvent):void
            {
                Alert.show("Unable to load data/pods.xml.");
            }

            private function onResultHttpService():void //e:ResultEvent):void
            {
                var viewXMLList:XMLList = pod_xml.view; //e.result.view;
                var len:Number = viewXMLList.length();
                for (var i:Number = 0; i < len; i++)
                { // Create a canvas for each view node.
//                    var canvas:Canvas = new Canvas();
//                    // PodLayoutManager handles resize and should prevent the need for
//                    // scroll bars so turn them off so they aren't visible during resizes.
//                    canvas.horizontalScrollPolicy = "off";
//                    canvas.verticalScrollPolicy = "off";
//                    canvas.label = viewXMLList[i].@id;
//                    canvas.percentWidth = 100;
//                    canvas.percentHeight = 100;
//                    viewStack.addChild(canvas);
//                    // Create a manager for each view.
//                    var manager:YsPodLayoutManager = new YsPodLayoutManager(this._pool);
//                    manager.container = canvas;
//                    manager.id = viewXMLList[i].@id;
//                    podLayoutManagers.push(manager);
                    mainCanvas.horizontalScrollPolicy = "off";
                    mainCanvas.verticalScrollPolicy = "off";
                    mainCanvas.label = viewXMLList[i].@id;
                    mainCanvas.percentWidth = 100;
                    mainCanvas.percentHeight = 100;
                    var manager:YsPodLayoutManager = new YsPodLayoutManager(this._pool);
                    manager.container = mainCanvas;
                    manager.id = viewXMLList[i].@id;
                    // podLayoutManagers.push(manager);
                    this.podManager = manager;
                    break;
                }
                //               tabBar.selectedIndex = 0;
            }
        ]]>
    </mx:Script>
    <mx:states>
        <mx:State name="index"
                  enterState="onEnterState()">
            <!--移除“登录框”-->
            <mx:RemoveChild target="{panel1}"/>
            <mx:AddChild>
                <mx:ApplicationControlBar dock="true"
                                          fontSize="12"
                                          height="5%">
                    <mx:Label text="交易码"/>
                    <mx:TextInput id="action"
                                  width="300"
                                  enter="podManager.dispatchEvent(new EventNewPod(action.text))"
                                  toolTip="点击Enter发送"/>
                    <mx:ComboBox dataProvider="{comboboxDP}"
                                 labelField="name"
                                 close="comboboxClickHandler(event)"/>
                </mx:ApplicationControlBar>
            </mx:AddChild>
            <mx:AddChild>
                <mx:Canvas width="100%"
                           height="100%"
                           id="mainCanvas"
                           borderStyle="solid"
                           borderColor="#EBDEDE"
                           borderThickness="3"/>
            </mx:AddChild>
            <mx:AddChild>
                <mx:ControlBar width="100%"
                               height="30"
                               barColor="red"
                               horizontalAlign="left"
                               fontFamily="Arial"
                               fontSize="14"
                               paddingBottom="1">
                    <mx:Label text="服务返回码"/>
                    <mx:Label color="blue"
                              id="SCALL_RTN"
                              width="35"/>
                    <mx:Label text="用户返回码"/>
                    <mx:Label color="blue"
                              id="USER_RTN"
                              width="35"/>
                    <mx:Label text="用户返回信息"/>
                    <mx:Label color="blue"
                              id="USER_RTN_MSG"
                              width="500"/>
                </mx:ControlBar>
            </mx:AddChild>
        </mx:State>
    </mx:states>
    <mx:Script>
        <![CDATA[
            //longin handler 
            [Bindable]
            private var comboboxDP:ArrayCollection =
                new ArrayCollection(
                [{name: "请选择"},
                 {name: "cxbm_tran"},
                 {name: "show memory bus"},
                 {name: "show_dict"},
                 {name: "show_window"},
                 {name: "show_service"},
                 {name: "show_tran"},
                 {name: "new_window"},
                 {name: "new_service"},
                 {name: "show_button"},
                 {name: "show_hbox"},
                 {name: "show_action"},
                 {name: "new_tran"}]);
            [Bindable]
            private var ipDP:ArrayCollection =
                new ArrayCollection(
                [{
                     ip: "192.168.0.77",
                     port: "16920"
                 },
                 {
                     ip: "192.168.0.75",
                     port: "16920"
                 },
                 {
                     ip: "192.168.88.84",
                     port: "16920"
                 },
                 {
                     ip: "192.168.0.216",
                     port: "16920"
                 },
                 {
                     ip: "124.207.197.178",
                     port: "6802"
                 },
                 {
                     ip: "124.207.197.178",
                     port: "6804"
                 }
                ]);
            [Bindable]
            private var users:ArrayCollection =
                new ArrayCollection(
                [{
                     user: "admin",
                     pwd: "admin"
                 },
                 {
                     user: "001",
                     pwd: "001"
                 },
                 {
                     user: "002",
                     pwd: "002"
                 },
                 {
                     user: "003",
                     pwd: "003"
                 },
                 {
                     user: "004",
                     pwd: "004"
                 },
                 {
                     user: "005",
                     pwd: "005"
                 },
                 {
                     user: "006",
                     pwd: "006"
                 }
                ]);
            [Bindable]
            private var ver_prvd:ArrayCollection = new ArrayCollection(
                [{text: '开发版本'},
                 {text: '生产版本', isused: '1'}]);

            private function comboboxClickHandler(event:Event):void
            {
                if ((event.currentTarget as ComboBox).selectedItem.name == "请选择")
                {
                    return;
                }
                action.text = (event.currentTarget as ComboBox).selectedItem.name;
                // addPod(podLayoutManagers[tabBar.selectedIndex], new Pod);
                podManager.dispatchEvent(new EventNewPod(action.text));
            }

            protected function OnLoginCallBack(bus:UserBus, error_event:ErrorEvent=null):void
            {
                if (error_event != null)
                {
                    Alert.show('登陆失败，服务器连接出错: ' + error_event.text);
                    return;
                }
                if (bus == null)
                {
                    Alert.show('登陆失败，服务调用出错');
                    return;
                }

                var scall_rtn:int = -1;
                var user_rtn:int = -1;
                var user_rtn_msg:String = '';


                if (bus.hasOwnProperty('__DICT_SCALL_RTN'))
                    scall_rtn = bus.__DICT_SCALL_RTN[0].value;

                if (bus.hasOwnProperty('__DICT_USER_RTN'))
                {
                    user_rtn = bus.__DICT_USER_RTN[0].value;
                    user_rtn_msg = bus.__DICT_USER_RTNMSG[0].value;
                }
                if (user_rtn != 0)
                {
                    Alert.show('登陆失败: ' + user_rtn_msg);
                    return
                }
                else
                {
                    _pool.Add('D_data', PData);
                    var p_data:PData = _pool.D_data as PData;
                    p_data.Update(bus);
                    currentState = "index";
                }
            }

            private function loginHandle():void
            {
                if (txtUsername.text == "" || txtPassword.text == "")
                {
                    Alert.show("请输入完整数据!");
                    return;
                }

                var ip:String = ipChoose.selectedItem.ip;
                var port:String = ipChoose.selectedItem.port;

                var service_call:ServiceCall = new ServiceCall;
                var send_bus:UserBus = new UserBus;
                send_bus.Add('USERID', txtUsername.text);
                // send_bus.Add('PASSWORD_EN', EncryptUtil.encryptHandler(txtPassword.text));
                send_bus.Add('PASSWORD_EN', txtPassword.text);
                send_bus.Add(ServiceCall.SCALL_NAME, 'YSUserLogin');

                service_call.Send(send_bus, ip, port, OnLoginCallBack);
            }

            private function changeIP():void
            {
                if (ipChoose.selectedIndex < ipDP.length - 1)
                {
                    ipChoose.selectedIndex++;
                    s_ipChoose.selectedIndex = ipChoose.selectedIndex;
                }
                else
                {
                    ipChoose.selectedIndex = 0;
                    s_ipChoose.selectedIndex = 0;
                }
            }

            private function changeUser():void
            {
                for (var i:int = 0; i < users.length; i++)
                {
                    if (txtUsername.text == users[i].user)
                    {
                        i = (i == users.length - 1) ? 0 : i + 1;
                        break;
                    }
                }
                txtUsername.text = users[i].user;
                txtPassword.text = users[i].pwd
            }

            public function GetServiceIp(service_name:String):String
            {
                var ip_table:Object = {'TestService': '192.168.0.77'};

                if (!ip_table.hasOwnProperty(service_name))
                {
                    return this.s_ipChoose.selectedItem.ip;
                }
                else
                {
                    return ip_table[service_name];
                }
            }

            public function GetServicePort(service_name:String):String
            {
                var port_table:Object = {'TestService': '16100'};

                if (!port_table.hasOwnProperty(service_name))
                {
                    return this.s_ipChoose.selectedItem.port;
                }
                else
                {
                    return port_table[service_name];
                }
            }

            private function resetHandle():void
            {
                txtUsername.text = "";
                txtPassword.text = "";
                //   txtCheckCode.text = "";
            }

            private function GenerateCheckCode():String
            {
                var ran:Number;
                var number:Number;
                var code:String;
                var checkCode:String = "";
                for (var i:int = 0; i < 4; i++)
                {
                    ran = Math.random();
                    number = Math.round(ran * 10000);
                    if (number % 2 == 0)
                        code = String.fromCharCode(48 + (number % 10));
                    else
                        code = String.fromCharCode(65 + (number % 26));
                    checkCode += code;
                }
                return checkCode;
            }

            protected function SetIpChooseLabel(item:Object):String
            {
                return item.ip + ':' + item.port;
            }
        ]]>
    </mx:Script>
    <mx:Panel verticalAlign="middle"
              verticalCenter="0.5"
              width="349"
              height="367"
              layout="absolute"
              title="用户登录"
              fontFamily="Georgia"
              fontSize="12"
              id="panel1">
        <!-- "用户名"标签 -->
        <mx:Label x="41.5"
                  y="33"
                  text="用户名"/>
        <!-- "密码"标签 -->
        <mx:Label x="42.5"
                  y="81"
                  text="密码"/>
        <!-- "用户名"输入框 -->
        <mx:TextInput x="94.5"
                      y="33"
                      id="txtUsername"
                      width="184"
                      text="admin"/>
        <!-- "密码"输入框 -->
        <mx:TextInput x="95.5"
                      y="81"
                      id="txtPassword"
                      displayAsPassword="true"
                      width="183"
                      text="admin"/>
        <!-- "登录"按钮 -->
        <mx:Button x="177"
                   y="251"
                   label="登录"
                   id="btnLogin"
                   click="loginHandle()"
                   fontWeight="bold"/>
        <!-- "重置"按钮 -->
        <mx:Button x="237"
                   y="251"
                   label="重置"
                   id="btnReset"
                   click="resetHandle()"/>
        <!-- "校验码"标签 -->
        <mx:Button x="95.5"
                   y="122"
                   label="交换User?"
                   id="lblCheckCode"
                   click="changeUser()"/>
        <mx:Button x="179.5"
                   y="123"
                   label="交换IP?"
                   id="linkbtnReGenerate"
                   click="changeIP();"
                   fontFamily="Georgia"
                   fontSize="11"/>
        <!-- "校验码"输入框
             <mx:Label x="39.5"
             y="123"
             text="校验码"/>
             "校验码"输入框 -->
        <!--<mx:TextInput x="96.5"
             y="121"
             id="txtCheckCode"
             width="61"
             maxChars="4"/>-->
        <mx:CheckBox x="96"
                     y="251"
                     label="记住密码"
                     id="rember"/>
        <mx:ComboBox x="96.5"
                     y="154"
                     width="182"
                     id="ipChoose"
                     dataProvider="{ipDP}"
                     labelFunction="SetIpChooseLabel"
                     selectedIndex="4">
        </mx:ComboBox>
        <mx:Label x="39.5"
                  y="157"
                  text="IP地址"
                  width="43.5"/>
        <mx:ComboBox x="96.5"
                     y="186"
                     width="182"
                     id="s_ipChoose"
                     dataProvider="{ipDP}"
                     labelFunction="SetIpChooseLabel"
                     selectedIndex="4">
        </mx:ComboBox>
        <mx:Label x="37"
                  y="189"
                  text="scall_ip"
                  width="43.5"/>
        <mx:Label x="45"
                  y="218"
                  text="版本"/>
        <mx:ComboBox x="96"
                     y="218"
                     width="182.5"
                     id="versionChoose"
                     dataProvider="{ver_prvd}"
                     labelField="text">
        </mx:ComboBox>
    </mx:Panel>
</mx:Application>
