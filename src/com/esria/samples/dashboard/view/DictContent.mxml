<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
         creationComplete="init_dict()"
         width="100%"
         height="100%"
         fontSize="12">
    <mx:Button label="refresh"
               id="refresh"
               click="refreshHandler()"/>
    <mx:DataGrid width="100%"
                 height="100%"
                 dataProvider="{dp}"
                 dragEnabled="true"
                 dragMoveEnabled="false"
                 dragEnter="dragEnterHandlerForRemove(event)"
                 dragDrop="dragDropHandlerForRemove(event)">
        <mx:Script>
            <![CDATA[
                import com.yspay.pool.QueryObject;
                import com.yspay.pool.DBTable;
                import com.yspay.pool.QueryWithIndex;
                import com.yspay.pool.Pool;
                import com.yspay.pool.DBTableInsertEvent;
                import com.yspay.pool.DBTableQueryEvent;
                import mx.collections.ArrayCollection;
                import flash.events.Event;
                import flash.net.SharedObject;
                import mx.containers.Form;
                import mx.containers.FormItem;
                import mx.containers.HBox;
                import mx.containers.TitleWindow;
                import mx.controls.*;
                import mx.core.Application;
                import mx.core.UIComponent;
                import mx.events.*;
                import mx.managers.DragManager;
                import mx.rpc.events.ResultEvent;
                import mx.rpc.http.mxml.HTTPService;
                import mx.states.State;
                import mx.utils.StringUtil;
                import com.yspay.*;
                import com.yspay.util.FunctionDelegate;
                import mx.managers.CursorManager;

                [Bindable]
                private var dp:ArrayCollection = new ArrayCollection;
                private var _pool:Pool;

                private function init_dict():void
                {
                    _pool = this.parentDocument._pool as Pool;
                    onInit_dict();
                }

                private function onInit_dict():void
                {
                    dp.removeAll();
                    var info:DBTable = _pool.info as DBTable;
                    for each (var dict_obj:QueryObject in info.DICT)
                    {
                        var ys_var:YsVarStruct = dict_obj.Get();
                        var o:Object = new Object;
                        o.name = ys_var.NAME.getValue();
                        o.dts = ys_var.DTS.getValue();
                        o.desc = ys_var.MEMO.getValue();
                        dp.addItem(o);
                    }

                }

                private function refreshHandler():void
                {
                    var info_query_dict:String = 'DICT';
                    var info_query_cond:String = "type='DICT' and appname='MapServer'";
                    var info:DBTable = _pool.info as DBTable;
                    info.AddQuery(info_query_dict, QueryWithIndex, info_query_cond, this);
                    CursorManager.setBusyCursor();
                    info.DoQuery(info_query_dict, false, 'NAME', 'VER');
                    this.addEventListener(info.select_event_name, InfoQueryComplete);
                }

                private function InfoQueryComplete(event:DBTableQueryEvent):void
                {
                    CursorManager.removeBusyCursor();
                    trace("--------------------Update dict in pool-----------------------")
                    trace(event.user_bus);
                    onInit_dict();
                }

                private function dragEnterHandlerForRemove(event:DragEvent):void
                {
                    if (event.dragSource.hasFormat("self"))
                        DragManager.acceptDragDrop(UIComponent(event.currentTarget));
                }

                private function dragDropHandlerForRemove(event:DragEvent):void
                {
                    (event.dragInitiator as UIComponent).parent.removeChild(event.dragInitiator as UIComponent);
                }
            ]]>
        </mx:Script>
        <mx:columns>
            <mx:DataGridColumn headerText="中文名字"
                               dataField="desc"/>
            <mx:DataGridColumn headerText="英文名字"
                               dataField="name">
            </mx:DataGridColumn>
            <mx:DataGridColumn headerText="DTS"
                               dataField="dts">
            </mx:DataGridColumn>
        </mx:columns>
    </mx:DataGrid>
</mx:VBox>
