
/**
 * 	Generated by mxmlc 2.0
 *
 *	Package:	
 *	Class: 		main0
 *	Source: 	D:\workspace\MyDsh\src\main0.mxml
 *	Template: 	flex2/compiler/mxml/gen/ClassDef.vm
 *	Time: 		2010.04.27 12:00:32 CST
 */

package 
{

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.display.DisplayObject;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.filters.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import flexlib.controls.SuperTabBar;
import flexlib.events.SuperTabEvent;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.containers.ApplicationControlBar;
import mx.containers.Panel;
import mx.containers.ViewStack;
import mx.controls.Button;
import mx.controls.CheckBox;
import mx.controls.ComboBox;
import mx.controls.Label;
import mx.controls.LinkButton;
import mx.controls.TextInput;
import mx.core.Application;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.events.DropdownEvent;
import mx.events.FlexEvent;
import mx.states.AddChild;
import mx.states.RemoveChild;
import mx.states.State;
import mx.styles.*;


[SWF( backgroundColor='16777215', heightPercent='100%', widthPercent='100%')]
[Frame(extraClass="_main0_FlexInit")]

[Frame(factoryClass="_main0_mx_managers_SystemManager")]


//	begin class def

public class main0
	extends mx.core.Application
	implements mx.binding.IBindingClient
{

	//	instance variables
/**
 * @private
 **/
	public var _main0_ComboBox1 : mx.controls.ComboBox;

/**
 * @private
 **/
	public var _main0_RemoveChild1 : mx.states.RemoveChild;

	[Bindable]
/**
 * @private
 **/
	public var action : mx.controls.TextInput;

	[Bindable]
/**
 * @private
 **/
	public var btnLogin : mx.controls.Button;

	[Bindable]
/**
 * @private
 **/
	public var btnReset : mx.controls.Button;

	[Bindable]
/**
 * @private
 **/
	public var ipChoose : mx.controls.ComboBox;

	[Bindable]
/**
 * @private
 **/
	public var lblCheckCode : mx.controls.Label;

	[Bindable]
/**
 * @private
 **/
	public var linkbtnReGenerate : mx.controls.LinkButton;

	[Bindable]
/**
 * @private
 **/
	public var panel1 : mx.containers.Panel;

	[Bindable]
/**
 * @private
 **/
	public var rember : mx.controls.CheckBox;

	[Bindable]
/**
 * @private
 **/
	public var s_ipChoose : mx.controls.ComboBox;

	[Bindable]
/**
 * @private
 **/
	public var tabBar : flexlib.controls.SuperTabBar;

	[Bindable]
/**
 * @private
 **/
	public var txtCheckCode : mx.controls.TextInput;

	[Bindable]
/**
 * @private
 **/
	public var txtPassword : mx.controls.TextInput;

	[Bindable]
/**
 * @private
 **/
	public var txtUsername : mx.controls.TextInput;

	[Bindable]
/**
 * @private
 **/
	public var viewStack : mx.containers.ViewStack;


	//	type-import dummies


	//	Container document descriptor
private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: mx.core.Application
  ,
  propertiesFactory: function():Object { return {
    childDescriptors: [
      new mx.core.UIComponentDescriptor({
        type: mx.containers.Panel
        ,
        id: "panel1"
        ,
        stylesFactory: function():void {
          this.verticalAlign = "middle";
          this.verticalCenter = "0.5";
          this.fontFamily = "Georgia";
          this.fontSize = 12;
        }
        ,
        propertiesFactory: function():Object { return {
          width: 349,
          height: 367,
          layout: "absolute",
          title: "用户登录",
          childDescriptors: [
            new mx.core.UIComponentDescriptor({
              type: mx.controls.Label
              ,
              propertiesFactory: function():Object { return {
                x: 41.5,
                y: 33,
                text: "用户名"
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.Label
              ,
              propertiesFactory: function():Object { return {
                x: 42.5,
                y: 81,
                text: "密码"
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.TextInput
              ,
              id: "txtUsername"
              ,
              propertiesFactory: function():Object { return {
                x: 94.5,
                y: 33,
                width: 184,
                text: "admin"
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.TextInput
              ,
              id: "txtPassword"
              ,
              propertiesFactory: function():Object { return {
                x: 95.5,
                y: 81,
                displayAsPassword: true,
                width: 183,
                text: "1"
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.Button
              ,
              id: "btnLogin"
              ,
              events: {
                click: "__btnLogin_click"
              }
              ,
              stylesFactory: function():void {
                this.fontWeight = "bold";
              }
              ,
              propertiesFactory: function():Object { return {
                x: 177.5,
                y: 242,
                label: "登录"
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.Button
              ,
              id: "btnReset"
              ,
              events: {
                click: "__btnReset_click"
              }
              ,
              propertiesFactory: function():Object { return {
                x: 237.5,
                y: 242,
                label: "重置"
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.Label
              ,
              id: "lblCheckCode"
              ,
              stylesFactory: function():void {
                this.color = 3636432;
              }
              ,
              propertiesFactory: function():Object { return {
                x: 165.5,
                y: 125,
                width: 42.5
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.LinkButton
              ,
              id: "linkbtnReGenerate"
              ,
              events: {
                click: "__linkbtnReGenerate_click"
              }
              ,
              stylesFactory: function():void {
                this.fontFamily = "Georgia";
                this.fontSize = 11;
              }
              ,
              propertiesFactory: function():Object { return {
                x: 216,
                y: 123,
                label: "看不清楚?"
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.Label
              ,
              propertiesFactory: function():Object { return {
                x: 39.5,
                y: 123,
                text: "校验码"
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.TextInput
              ,
              id: "txtCheckCode"
              ,
              propertiesFactory: function():Object { return {
                x: 96.5,
                y: 121,
                width: 61,
                maxChars: 4
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.CheckBox
              ,
              id: "rember"
              ,
              propertiesFactory: function():Object { return {
                x: 96.5,
                y: 242,
                label: "记住密码"
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.ComboBox
              ,
              id: "ipChoose"
              ,
              propertiesFactory: function():Object { return {
                x: 96.5,
                y: 154,
                width: 182,
                labelField: "ip"
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.Label
              ,
              propertiesFactory: function():Object { return {
                x: 39.5,
                y: 157,
                text: "IP地址",
                width: 43.5
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.ComboBox
              ,
              id: "s_ipChoose"
              ,
              propertiesFactory: function():Object { return {
                x: 96.5,
                y: 186,
                width: 182,
                labelField: "ip"
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.Label
              ,
              propertiesFactory: function():Object { return {
                x: 37,
                y: 189,
                text: "scall_ip",
                width: 43.5
              }}
            })
          ]
        }}
      })
    ]
  }}
})

	//	constructor (Flex display object)
    /**
     * @private
     **/
	public function main0()
	{
		super();

		mx_internal::_document = this;

		//	our style settings
		//	initialize component styles
		if (!this.styleDeclaration)
		{
			this.styleDeclaration = new CSSStyleDeclaration();
		}

		this.styleDeclaration.defaultFactory = function():void
		{
			this.verticalAlign = "middle";
			this.horizontalAlign = "center";
			this.backgroundSize = "100%";
			this.backgroundColor = 16777215;
			this.paddingLeft = 45;
			this.paddingRight = 45;
			this.paddingBottom = 35;
			this.paddingTop = 34;
		};


		//	ambient styles
		mx_internal::_main0_StylesInit();

		//	properties
		this.minWidth = 600;
		this.minHeight = 600;
		this.states = [_main0_State1_c()];

		//	events

	}

	//	initialize()
    /**
     * @private
     **/
	override public function initialize():void
	{
 		mx_internal::setDocumentDescriptor(_documentDescriptor_);

		var bindings:Array = _main0_bindingsSetup();
		var watchers:Array = [];

		var target:main0 = this;

		if (_watcherSetupUtil == null)
		{
			var watcherSetupUtilClass:Object = getDefinitionByName("_main0WatcherSetupUtil");
			watcherSetupUtilClass["init"](null);
		}

		_watcherSetupUtil.setup(this,
					function(propertyName:String):* { return target[propertyName]; },
					bindings,
					watchers);

		for (var i:uint = 0; i < bindings.length; i++)
		{
			Binding(bindings[i]).execute();
		}

		mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
		mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


		super.initialize();
	}

	//	scripts
	//	<Script>, line 18 - 183

            import mx.containers.Canvas;
            import mx.controls.Alert;
            import mx.controls.ComboBox;
            import mx.events.FlexEvent;
            import mx.events.IndexChangedEvent;
            import mx.events.ItemClickEvent;
            import mx.rpc.events.FaultEvent;
            import mx.rpc.events.ResultEvent;
            import mx.rpc.http.HTTPService;
            import mx.collections.ArrayCollection;
            import mx.core.UIComponent;
            import mx.managers.CursorManager;
            import flexlib.events.SuperTabEvent;
            import com.esria.samples.dashboard.view.MemoryBusContent;
            import com.esria.samples.dashboard.view.NewService;
            import com.esria.samples.dashboard.view.ServiceContent;
            import com.esria.samples.dashboard.view.WindowContent;
            import com.esria.samples.dashboard.view.DeployedWindow;
            import com.esria.samples.dashboard.view.NewWindow;
            import com.esria.samples.dashboard.view.DictContent;
            import com.esria.samples.dashboard.view.SetupContent;
            import com.yspay.util.FunctionDelegate;
            import com.esria.samples.dashboard.events.*;
            import com.esria.samples.dashboard.managers.PodLayoutManager;
            import com.esria.samples.dashboard.view.Pod;
            import com.esria.samples.dashboard.view.PodContentBase;
            import com.yspay.pool.*;
            import com.yspay.YsPodLayoutManager;
            import com.yspay.events.EventNewPod;
            import com.yspay.util.EncryptUtil;
            import com.yspay.UserBus;
            import com.yspay.*;

            // Array of PodLayoutManagers
            private var podLayoutManagers:Array = new Array();
            public var _pool:Pool;
            public var M_data:Object = new Object; //xingj

            private function onEnterState():void
            {
                // Load pods.xml, which contains the pod layout.
                var httpService:HTTPService = new HTTPService();
                httpService.url = "data/pods.xml";
                httpService.resultFormat = "e4x";
                httpService.addEventListener(FaultEvent.FAULT, onFaultHttpService);
                httpService.addEventListener(ResultEvent.RESULT, onResultHttpService);
                httpService.send();
                initPool();
            }

            public function initPool():void
            {
                var ip:String = ipChoose.selectedItem.ip;
                var port:String = ipChoose.selectedItem.port;
                var info_table_name:String = 'info';
                var info_select_name:String = 'YSDBSTB_DTSINFOSelect';
                var info_select_arg:String = 'YSDICT_DB_TB_DTSINFO';
                var dts_table_name:String = 'dts';
                var dts_select_name:String = 'YSDBSDTSObjectSelect';
                var dts_select_arg:String = '__DICT_XML';
                var dts_insert_name:String = 'YSDBSDTSObjectConfigInsert';
                var dts_insert_arg:String = '__DICT_XML';
                _pool = new Pool;
                _pool.Add(info_table_name, DBTable,
                          info_select_name, info_select_arg,
                          '', '',
                          ip, port);
                _pool.Add(dts_table_name, DBTable,
                          dts_select_name, dts_select_arg,
                          dts_insert_name, dts_insert_arg,
                          ip, port);
                var info:DBTable = _pool.info as DBTable;
                var arr:Array = ['DICT', 'WINDOWS', 'BUTTON', 'SERVICES', 'TRAN', 'ACTION', 'HBOX', 'EVENT'];
                this.addEventListener(info.select_event_name, InfoQueryComplete);
                CursorManager.setBusyCursor();
                M_data.POOL = new Object; // xingj
                M_data.POOL.INFO = new Object; // xingj
                M_data.BUS = new Object;
                M_data.BUS.MAIN = new Object;
                M_data.BUS.RECV = new Object;
                M_data.TRAN = new Object;
                M_data.TRAN.cont = new int;
                M_data.TRAN.cont = 10000;
                for each (var str:String in arr)
                {
                    var info_query_dict:String = str;
                    var info_query_cond:String = "type='" + str + "' and appname='MapServer'";
                    info.AddQuery(info_query_dict, QueryWithIndex, info_query_cond, this);
                    info.DoQuery(info_query_dict, 'NAME', 'VER');
                    M_data.POOL.INFO[str] = new ArrayCollection;
                }
                _pool.Add('MAIN_BUS', UserBus);
            }

            private function InfoQueryComplete(event:DBTableQueryEvent):void
            {
                // ;
                CursorManager.removeBusyCursor();
                trace("--------------------pool-----------------------")
                trace(event.user_bus);
                var info:DBTable = _pool.info as DBTable;
                var i:int = 0;

                if (M_data.POOL.INFO[event.query_name] != null)
                    M_data.POOL.INFO[event.query_name].removeAll();

                M_data.POOL.INFO[event.query_name] = new ArrayCollection;

                for each (var dict_obj:QueryObject in info[event.query_name])
                {
                    var ys_var:YsVarStruct = dict_obj.Get();
                    if (M_data.POOL.INFO[event.query_name].length <= i)
                        M_data.POOL.INFO[event.query_name].addItem(new Object);
                    M_data.POOL.INFO[event.query_name][i]["APPNAME"] = ys_var.APPNAME.getValue();
                    M_data.POOL.INFO[event.query_name][i]["CDATE"] = ys_var.CDATE.getValue();
                    M_data.POOL.INFO[event.query_name][i]["CUSER"] = ys_var.CUSER.getValue();
                    M_data.POOL.INFO[event.query_name][i]["DTS"] = ys_var.DTS.getValue();
                    M_data.POOL.INFO[event.query_name][i]["ISUSED"] = ys_var.ISUSED.getValue();
                    M_data.POOL.INFO[event.query_name][i]["MDATE"] = ys_var.MDATE.getValue();
                    M_data.POOL.INFO[event.query_name][i]["MEMO"] = ys_var.MEMO.getValue();
                    M_data.POOL.INFO[event.query_name][i]["MUSER"] = ys_var.MUSER.getValue();
                    M_data.POOL.INFO[event.query_name][i]["NAME"] = ys_var.NAME.getValue();
                    M_data.POOL.INFO[event.query_name][i]["TYPE"] = ys_var.TYPE.getValue();
                    M_data.POOL.INFO[event.query_name][i]["VALUE"] = ys_var.VALUE.getValue();
                    M_data.POOL.INFO[event.query_name][i]["VER"] = ys_var.VER.getValue();

                    i++;
                }
                //xingj ..
            }

            private function onFaultHttpService(e:FaultEvent):void
            {
                Alert.show("Unable to load data/pods.xml.");
            }

            private function onResultHttpService(e:ResultEvent):void
            {
                var viewXMLList:XMLList = e.result.view;
                var len:Number = viewXMLList.length();
                for (var i:Number = 0; i < len; i++)
                { // Create a canvas for each view node.
                    var canvas:Canvas = new Canvas();
                    // PodLayoutManager handles resize and should prevent the need for
                    // scroll bars so turn them off so they aren't visible during resizes.
                    canvas.horizontalScrollPolicy = "off";
                    canvas.verticalScrollPolicy = "off";
                    canvas.label = viewXMLList[i].@id;
                    canvas.percentWidth = 100;
                    canvas.percentHeight = 100;
                    viewStack.addChild(canvas);
                    // Create a manager for each view.
                    var manager:YsPodLayoutManager = new YsPodLayoutManager(this._pool);
                    manager.container = canvas;
                    manager.id = viewXMLList[i].@id;
                    podLayoutManagers.push(manager);
                }
                tabBar.selectedIndex = 0;
            }

            private function tabCloseHandler(event:SuperTabEvent):void
            {
                podLayoutManagers.splice(event.tabIndex, 1);
            }
        

	//	<Script>, line 221 - 337

            //longin handler 
            [Bindable]
            private var comboboxDP:ArrayCollection = new ArrayCollection([{name: "请选择"}, {name: "show memory bus"}, {name: "show dict"}, {name: "show window"}, {name: "show service"}, {name: "show tran"},
                                                                          {name: "new window"},
                                                                          {name: "new service"}, {name: "new tran"}]);
            [Bindable]
            private var ipDP:ArrayCollection = new ArrayCollection([{ip: "192.168.0.77", port: "16920"}, {ip: "192.168.0.216", port: "16920"}, {ip: "124.207.197.178", port: "6802"}, {ip: "192.168.0.75",
                                                                        port: "16920"}]);

            private function comboboxClickHandler(event:Event):void
            {
                if ((event.currentTarget as ComboBox).selectedItem.name == "请选择")
                {
                    return;
                }
                action.text = (event.currentTarget as ComboBox).selectedItem.name;
                // addPod(podLayoutManagers[tabBar.selectedIndex], new Pod);
                var podMgn:YsPodLayoutManager = podLayoutManagers[tabBar.selectedIndex] as YsPodLayoutManager;
                podMgn.dispatchEvent(new EventNewPod(action.text));
            }

            private function loginHandle():void
            {
                if (txtUsername.text == "" || txtPassword.text == "")
                {
                    Alert.show("请输入完整数据!");
                }
//                else if (txtCheckCode.text.toLocaleLowerCase() != lblCheckCode.text.toLowerCase())
//                {
//                    Alert.show("验证码错误");
//                }
                else
                {
                    if (txtUsername.text == "admin" && EncryptUtil.encryptHandler(txtPassword.text) == EncryptUtil.encryptHandler("1"))
                    {
                        if (rember.selected)
                        {
                            var so:SharedObject = SharedObject.getLocal('info');
                            so.data.username = txtUsername.text;
                            so.data.password = txtPassword.text;
                            so.flush();
                        }
                        else
                        {
                            txtUsername.text = "";
                            txtPassword.text = "";
                            txtCheckCode.text = "";
                            var share:SharedObject = SharedObject.getLocal('info');
                            share.clear();
                        }
                        this.styleName = '';
                        this.setStyle("horizontalAlign", "left");
                        this.setStyle("verticalAlign", "top");
                        currentState = "index";
                    }
                    else
                    {
                        Alert.show("用户名或密码错误!");
                    }
                }
            }

            public function GetServiceIp(service_name:String):String
            {
                var ip_table:Object = {'TestService': '192.168.0.77'};

                if (!ip_table.hasOwnProperty(service_name))
                {
                    return this.s_ipChoose.selectedItem.ip;
                }
                else
                {
                    return ip_table[service_name];
                }
            }

            public function GetServicePort(service_name:String):String
            {
                var port_table:Object = {'TestService': '16100'};

                if (!port_table.hasOwnProperty(service_name))
                {
                    return this.s_ipChoose.selectedItem.port;
                }
                else
                {
                    return port_table[service_name];
                }
            }

            private function resetHandle():void
            {
                txtUsername.text = "";
                txtPassword.text = "";
                txtCheckCode.text = "";
            }

            private function GenerateCheckCode():String
            {
                var ran:Number;
                var number:Number;
                var code:String;
                var checkCode:String = "";
                for (var i:int = 0; i < 4; i++)
                {
                    ran = Math.random();
                    number = Math.round(ran * 10000);
                    if (number % 2 == 0)
                        code = String.fromCharCode(48 + (number % 10));
                    else
                        code = String.fromCharCode(65 + (number % 26));
                    checkCode += code;
                }
                return checkCode;
            }
        

	//	end scripts


    //	supporting function definitions for properties, events, styles, effects
private function _main0_State1_c() : mx.states.State
{
	var temp : mx.states.State = new mx.states.State();
	temp.name = "index";
	temp.overrides = [_main0_RemoveChild1_i(), _main0_AddChild1_c(), _main0_AddChild2_c(), _main0_AddChild3_c()];
	temp.addEventListener("enterState", ___main0_State1_enterState);
	return temp;
}

private function _main0_RemoveChild1_i() : mx.states.RemoveChild
{
	var temp : mx.states.RemoveChild = new mx.states.RemoveChild();
	_main0_RemoveChild1 = temp;
	mx.binding.BindingManager.executeBindings(this, "_main0_RemoveChild1", _main0_RemoveChild1);
	return temp;
}

private function _main0_AddChild1_c() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_main0_ApplicationControlBar1_c);
	return temp;
}

private function _main0_ApplicationControlBar1_c() : mx.containers.ApplicationControlBar
{
	var temp : mx.containers.ApplicationControlBar = new mx.containers.ApplicationControlBar();
	temp.dock = true;
	temp.setStyle("fontSize", 12);
	if (!temp.document) temp.document = this;
	temp.addChild(_main0_Label1_c());
	temp.addChild(_main0_TextInput1_i());
	temp.addChild(_main0_ComboBox1_i());
	return temp;
}

private function _main0_Label1_c() : mx.controls.Label
{
	var temp : mx.controls.Label = new mx.controls.Label();
	temp.text = "交易码";
	if (!temp.document) temp.document = this;
	return temp;
}

private function _main0_TextInput1_i() : mx.controls.TextInput
{
	var temp : mx.controls.TextInput = new mx.controls.TextInput();
	action = temp;
	temp.width = 300;
	temp.toolTip = "点击Enter发送";
	temp.addEventListener("enter", __action_enter);
	temp.id = "action";
	if (!temp.document) temp.document = this;
	return temp;
}

/**
 * @private
 **/
public function __action_enter(event:mx.events.FlexEvent):void
{
	podLayoutManagers[tabBar.selectedIndex].dispatchEvent(new EventNewPod(action.text))
}

private function _main0_ComboBox1_i() : mx.controls.ComboBox
{
	var temp : mx.controls.ComboBox = new mx.controls.ComboBox();
	_main0_ComboBox1 = temp;
	temp.labelField = "name";
	temp.addEventListener("close", ___main0_ComboBox1_close);
	temp.id = "_main0_ComboBox1";
	mx.binding.BindingManager.executeBindings(this, "_main0_ComboBox1", _main0_ComboBox1);
	if (!temp.document) temp.document = this;
	return temp;
}

/**
 * @private
 **/
public function ___main0_ComboBox1_close(event:mx.events.DropdownEvent):void
{
	comboboxClickHandler(event)
}

private function _main0_AddChild2_c() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	temp.position = "lastChild";
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_main0_SuperTabBar1_i);
	return temp;
}

private function _main0_SuperTabBar1_i() : flexlib.controls.SuperTabBar
{
	var temp : flexlib.controls.SuperTabBar = new flexlib.controls.SuperTabBar();
	tabBar = temp;
	temp.dragEnabled = false;
	temp.height = 35;
	temp.dataProvider = "viewStack";
	temp.addEventListener("tabClose", __tabBar_tabClose);
	temp.id = "tabBar";
	if (!temp.document) temp.document = this;
	return temp;
}

/**
 * @private
 **/
public function __tabBar_tabClose(event:flexlib.events.SuperTabEvent):void
{
	tabCloseHandler(event)
}

private function _main0_AddChild3_c() : mx.states.AddChild
{
	var temp : mx.states.AddChild = new mx.states.AddChild();
	temp.targetFactory = new mx.core.DeferredInstanceFromFunction(_main0_ViewStack1_i);
	return temp;
}

private function _main0_ViewStack1_i() : mx.containers.ViewStack
{
	var temp : mx.containers.ViewStack = new mx.containers.ViewStack();
	viewStack = temp;
	temp.percentWidth = 100.0;
	temp.percentHeight = 100.0;
	temp.setStyle("paddingTop", 15);
	temp.id = "viewStack";
	if (!temp.document) temp.document = this;
	return temp;
}

/**
 * @private
 **/
public function ___main0_State1_enterState(event:mx.events.FlexEvent):void
{
	onEnterState()
}

/**
 * @private
 **/
public function __btnLogin_click(event:flash.events.MouseEvent):void
{
	loginHandle()
}

/**
 * @private
 **/
public function __btnReset_click(event:flash.events.MouseEvent):void
{
	resetHandle()
}

/**
 * @private
 **/
public function __linkbtnReGenerate_click(event:flash.events.MouseEvent):void
{
	lblCheckCode.text=GenerateCheckCode();
}


	//	binding mgmt
    private function _main0_bindingsSetup():Array
    {
        var result:Array = [];
        var binding:Binding;

        binding = new mx.binding.Binding(this,
            function():flash.display.DisplayObject
            {
                return (panel1);
            },
            function(_sourceFunctionReturnValue:flash.display.DisplayObject):void
            {
				
                _main0_RemoveChild1.target = _sourceFunctionReturnValue;
            },
            "_main0_RemoveChild1.target");
        result[0] = binding;
        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (comboboxDP);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                _main0_ComboBox1.dataProvider = _sourceFunctionReturnValue;
            },
            "_main0_ComboBox1.dataProvider");
        result[1] = binding;
        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (ipDP);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                ipChoose.dataProvider = _sourceFunctionReturnValue;
            },
            "ipChoose.dataProvider");
        result[2] = binding;
        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (ipDP);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                s_ipChoose.dataProvider = _sourceFunctionReturnValue;
            },
            "s_ipChoose.dataProvider");
        result[3] = binding;

        return result;
    }

    private function _main0_bindingExprs():void
    {
        var destination:*;
		[Binding(id='0')]
		destination = (panel1);
		[Binding(id='1')]
		destination = (comboboxDP);
		[Binding(id='2')]
		destination = (ipDP);
		[Binding(id='3')]
		destination = (ipDP);
    }

    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil):void
    {
        (main0)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil;

	//	initialize style defs for main0

	mx_internal static var _main0_StylesInit_done:Boolean = false;

	mx_internal function _main0_StylesInit():void
	{
		//	only add our style defs to the StyleManager once
		if (mx_internal::_main0_StylesInit_done)
			return;
		else
			mx_internal::_main0_StylesInit_done = true;

		var style:CSSStyleDeclaration;
		var effects:Array;

		// Pod
		style = StyleManager.getStyleDeclaration("Pod");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration("Pod", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.borderColor = 0x999999;
				this.paddingLeft = 10;
				this.roundedBottomCorners = false;
				this.dropShadowColor = 0x999999;
				this.paddingBottom = 10;
				this.borderStyle = "solid";
				this.paddingTop = 31;
				this.highlightAlphas = [0.9, 0];
				this.cornerRadius = 6;
				this.paddingRight = 10;
				this.headerColors = [0xcccccc, 0x999999];
				this.shadowDirection = "right";
				this.headerHeight = 22;
				this.borderThickness = 1;
				this.backgroundColor = 0xffffff;
			};
		}
		// podTitle
		style = StyleManager.getStyleDeclaration(".podTitle");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration(".podTitle", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.fontWeight = "bold";
				this.fontSize = 11;
				this.fontFamily = "Arial";
			};
		}
		// DragHighlight
		style = StyleManager.getStyleDeclaration("DragHighlight");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration("DragHighlight", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.borderColor = 0xcccccc;
				this.borderThickness = 3;
				this.borderStyle = "solid";
				this.backgroundColor = 0xf3f3f3;
			};
		}
		// maximizeRestoreButton
		style = StyleManager.getStyleDeclaration(".maximizeRestoreButton");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration(".maximizeRestoreButton", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.selectedDownSkin = _embed_css__assets_restore_up_png_771539310;
				this.selectedUpSkin = _embed_css__assets_restore_up_png_771539310;
				this.selectedOverSkin = _embed_css__assets_restore_over_png_1436959204;
				this.upSkin = _embed_css__assets_maximize_up_png_1217336842;
				this.downSkin = _embed_css__assets_maximize_up_png_1217336842;
				this.overSkin = _embed_css__assets_maximize_over_png_600154344;
			};
		}
		// rightArrowButton
		style = StyleManager.getStyleDeclaration(".rightArrowButton");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration(".rightArrowButton", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.upSkin = _embed_css__assets_right_arrow_up_gif_262451944;
				this.downSkin = _embed_css__assets_right_arrow_up_gif_262451944;
				this.overSkin = _embed_css__assets_right_arrow_over_gif_2110374966;
				this.disabledSkin = _embed_css__assets_right_arrow_disabled_gif_1768274566;
			};
		}
		// minimizeButton
		style = StyleManager.getStyleDeclaration(".minimizeButton");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration(".minimizeButton", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.upSkin = _embed_css__assets_minimize_up_png_844549670;
				this.downSkin = _embed_css__assets_minimize_up_png_844549670;
				this.overSkin = _embed_css__assets_minimize_over_png_467092292;
			};
		}
		// leftArrowButton
		style = StyleManager.getStyleDeclaration(".leftArrowButton");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration(".leftArrowButton", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.upSkin = _embed_css__assets_left_arrow_up_gif_60014810;
				this.downSkin = _embed_css__assets_left_arrow_up_gif_60014810;
				this.overSkin = _embed_css__assets_left_arrow_over_gif_655489108;
				this.disabledSkin = _embed_css__assets_left_arrow_disabled_gif_2140086948;
			};
		}
		// closeButton
		style = StyleManager.getStyleDeclaration(".closeButton");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration(".closeButton", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.upSkin = _embed_css__assets_close_up_png_1162178086;
				this.downSkin = _embed_css__assets_close_up_png_1162178086;
				this.overSkin = _embed_css__assets_close_over_png_293509584;
			};
		}
		// Application
		style = StyleManager.getStyleDeclaration("Application");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration("Application", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.color = 0x000000;
				this.backgroundGradientColors = [0xffffff, 0xffffff];
				this.backgroundImage = _embed_css__assets_application_background_png_436334280;
			};
		}
		// tabBarButtonSelected
		style = StyleManager.getStyleDeclaration(".tabBarButtonSelected");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration(".tabBarButtonSelected", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.color = 0x003399;
				this.textRollOverColor = 0x003399;
			};
		}
		// TabBar
		style = StyleManager.getStyleDeclaration("TabBar");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration("TabBar", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.tabStyleName = "tabBarButton";
				this.selectedTabTextStyleName = "tabBarButtonSelected";
			};
		}
		// tabBarButton
		style = StyleManager.getStyleDeclaration(".tabBarButton");
		if (!style)
		{
			style = new CSSStyleDeclaration();
			StyleManager.setStyleDeclaration(".tabBarButton", style, false);
		}
		if (style.factory == null)
		{
			style.factory = function():void
			{
				this.paddingLeft = 10;
				this.textRollOverColor = 0x858585;
				this.upSkin = _embed_css__assets_tab_up_png_2095403188;
				this.fontSize = 12;
				this.overSkin = _embed_css__assets_tab_up_png_2095403188;
				this.fontFamily = "Arial";
				this.paddingTop = -4;
				this.textAlign = "left";
				this.color = 0x333333;
				this.selectedDownSkin = _embed_css__assets_tab_selected_png_1199931286;
				this.selectedUpSkin = _embed_css__assets_tab_selected_png_1199931286;
				this.paddingRight = 20;
				this.selectedOverSkin = _embed_css__assets_tab_selected_png_1199931286;
				this.downSkin = _embed_css__assets_tab_up_png_2095403188;
			};
		}

		StyleManager.mx_internal::initProtoChainRoots();
	}


	//	embed carrier vars
[Embed(_pathsep='true', scaleGridLeft='350', _resolvedSource='D:/workspace/MyDsh/src/assets/application_background.png', scaleGridBottom='791', original='/assets/application_background.png', scaleGridTop='94', scaleGridRight='690', source='D:/workspace/MyDsh/src/assets/application_background.png', _file='D:/workspace/MyDsh/src/assets/styles.css', _line='6')]
 private var _embed_css__assets_application_background_png_436334280:Class;

[Embed(_pathsep='true', _resolvedSource='D:/workspace/MyDsh/src/assets/close_over.png', original='/assets/close_over.png', source='D:/workspace/MyDsh/src/assets/close_over.png', _file='D:/workspace/MyDsh/src/assets/styles.css', _line='28')]
 private var _embed_css__assets_close_over_png_293509584:Class;

[Embed(_pathsep='true', _resolvedSource='D:/workspace/MyDsh/src/assets/close_up.png', original='/assets/close_up.png', source='D:/workspace/MyDsh/src/assets/close_up.png', _file='D:/workspace/MyDsh/src/assets/styles.css', _line='27')]
 private var _embed_css__assets_close_up_png_1162178086:Class;

[Embed(_pathsep='true', _resolvedSource='D:/workspace/MyDsh/src/assets/left_arrow_disabled.gif', original='/assets/left_arrow_disabled.gif', source='D:/workspace/MyDsh/src/assets/left_arrow_disabled.gif', _file='D:/workspace/MyDsh/src/assets/styles.css', _line='101')]
 private var _embed_css__assets_left_arrow_disabled_gif_2140086948:Class;

[Embed(_pathsep='true', _resolvedSource='D:/workspace/MyDsh/src/assets/left_arrow_over.gif', original='/assets/left_arrow_over.gif', source='D:/workspace/MyDsh/src/assets/left_arrow_over.gif', _file='D:/workspace/MyDsh/src/assets/styles.css', _line='99')]
 private var _embed_css__assets_left_arrow_over_gif_655489108:Class;

[Embed(_pathsep='true', _resolvedSource='D:/workspace/MyDsh/src/assets/left_arrow_up.gif', original='/assets/left_arrow_up.gif', source='D:/workspace/MyDsh/src/assets/left_arrow_up.gif', _file='D:/workspace/MyDsh/src/assets/styles.css', _line='98')]
 private var _embed_css__assets_left_arrow_up_gif_60014810:Class;

[Embed(_pathsep='true', _resolvedSource='D:/workspace/MyDsh/src/assets/maximize_over.png', original='/assets/maximize_over.png', source='D:/workspace/MyDsh/src/assets/maximize_over.png', _file='D:/workspace/MyDsh/src/assets/styles.css', _line='12')]
 private var _embed_css__assets_maximize_over_png_600154344:Class;

[Embed(_pathsep='true', _resolvedSource='D:/workspace/MyDsh/src/assets/maximize_up.png', original='/assets/maximize_up.png', source='D:/workspace/MyDsh/src/assets/maximize_up.png', _file='D:/workspace/MyDsh/src/assets/styles.css', _line='11')]
 private var _embed_css__assets_maximize_up_png_1217336842:Class;

[Embed(_pathsep='true', _resolvedSource='D:/workspace/MyDsh/src/assets/minimize_over.png', original='/assets/minimize_over.png', source='D:/workspace/MyDsh/src/assets/minimize_over.png', _file='D:/workspace/MyDsh/src/assets/styles.css', _line='22')]
 private var _embed_css__assets_minimize_over_png_467092292:Class;

[Embed(_pathsep='true', _resolvedSource='D:/workspace/MyDsh/src/assets/minimize_up.png', original='/assets/minimize_up.png', source='D:/workspace/MyDsh/src/assets/minimize_up.png', _file='D:/workspace/MyDsh/src/assets/styles.css', _line='21')]
 private var _embed_css__assets_minimize_up_png_844549670:Class;

[Embed(_pathsep='true', _resolvedSource='D:/workspace/MyDsh/src/assets/restore_over.png', original='/assets/restore_over.png', source='D:/workspace/MyDsh/src/assets/restore_over.png', _file='D:/workspace/MyDsh/src/assets/styles.css', _line='15')]
 private var _embed_css__assets_restore_over_png_1436959204:Class;

[Embed(_pathsep='true', _resolvedSource='D:/workspace/MyDsh/src/assets/restore_up.png', original='/assets/restore_up.png', source='D:/workspace/MyDsh/src/assets/restore_up.png', _file='D:/workspace/MyDsh/src/assets/styles.css', _line='14')]
 private var _embed_css__assets_restore_up_png_771539310:Class;

[Embed(_pathsep='true', _resolvedSource='D:/workspace/MyDsh/src/assets/right_arrow_disabled.gif', original='/assets/right_arrow_disabled.gif', source='D:/workspace/MyDsh/src/assets/right_arrow_disabled.gif', _file='D:/workspace/MyDsh/src/assets/styles.css', _line='109')]
 private var _embed_css__assets_right_arrow_disabled_gif_1768274566:Class;

[Embed(_pathsep='true', _resolvedSource='D:/workspace/MyDsh/src/assets/right_arrow_over.gif', original='/assets/right_arrow_over.gif', source='D:/workspace/MyDsh/src/assets/right_arrow_over.gif', _file='D:/workspace/MyDsh/src/assets/styles.css', _line='107')]
 private var _embed_css__assets_right_arrow_over_gif_2110374966:Class;

[Embed(_pathsep='true', _resolvedSource='D:/workspace/MyDsh/src/assets/right_arrow_up.gif', original='/assets/right_arrow_up.gif', source='D:/workspace/MyDsh/src/assets/right_arrow_up.gif', _file='D:/workspace/MyDsh/src/assets/styles.css', _line='106')]
 private var _embed_css__assets_right_arrow_up_gif_262451944:Class;

[Embed(_pathsep='true', scaleGridLeft='9', _resolvedSource='D:/workspace/MyDsh/src/assets/tab_selected.png', scaleGridBottom='31', original='/assets/tab_selected.png', scaleGridTop='13', scaleGridRight='91', source='D:/workspace/MyDsh/src/assets/tab_selected.png', _file='D:/workspace/MyDsh/src/assets/styles.css', _line='43')]
 private var _embed_css__assets_tab_selected_png_1199931286:Class;

[Embed(_pathsep='true', scaleGridLeft='10', _resolvedSource='D:/workspace/MyDsh/src/assets/tab_up.png', scaleGridBottom='30', original='/assets/tab_up.png', scaleGridTop='11', scaleGridRight='92', source='D:/workspace/MyDsh/src/assets/tab_up.png', _file='D:/workspace/MyDsh/src/assets/styles.css', _line='40')]
 private var _embed_css__assets_tab_up_png_2095403188:Class;

	//	end embed carrier vars

	//	binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//	end class def
}

//	end package def
}
